class PieChartExample extends React.Component {
  state = { sinVal: 0 };

  _animateValue = () => {
    const sinVal = Math.min(
      Math.abs(
        Math.cos(new Date() * 0.001) * Math.sin(new Date() * 0.0011) + 1,
      ),
      2,
    );
    this.setState({ sinVal });
  };

  componentWillMount() {
    this._interval = setInterval(this._animateValue, 20);
  }
  componentWillUnmount() {
    clearInterval(this._interval);
  }

  render() {
    const colorPicker = (d, i, c) => (i === c ? (d / 45) * 255 : 200);
    const slice = d => d;
    return (
      <div>
        <PieChart
          slice={slice}
          data={[45, 25, 50]}
          pieSliceStyle={(d, i) => ({
            fill: `rgb(${colorPicker(d, i, 0)}, ${colorPicker(
              d,
              i,
              1,
            )}, ${colorPicker(d, i, 2)}`,
          })}
        />
        <PieChart
          slice={slice}
          data={[10, 20, 30]}
          radius={100}
          holeRadius={50}
          margin={20}
          markerLineValue={20}
        />
        <PieChart
          slice={slice}
          data={[42]}
          total={100}
          radius={80}
          holeRadius={50}
          centerLabel="42%"
        />
        <PieChart
          slice={slice}
          data={[this.state.sinVal]}
          total={2}
          radius={200}
          holeRadius={50}
          centerLabel={(this.state.sinVal * 50).toFixed(0)}
        />
        <PieChart
          slice={slice}
          data={[45, 35, 20]}
          getPieSliceLabel={val => `${val}%`}
          pieSliceLabelDistance={20}
          holeRadius={75}
          radius={100}
          marginTop={50}
          marginBottom={50}
          marginLeft={50}
          marginRight={50}
        />
      </div>
    );
  }
}

ReactDOM.render(<PieChartExample />, mountNode);
